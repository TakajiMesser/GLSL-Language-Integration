void
For functions that do not return a value.

bool
A conditional type, taking on values of true or false.

int
A signed integer.

uint
An unsigned integer.

float
A single-precision floating-point scalar.

double
A double-precision floating-point scalar.

vec2
A two-component single-precision floating-point vector.

vec3
A three-component single-precision floating-point vector.

vec4
A four-component single-precision floating-point vector.

dvec2
A two-component double-precision floating-point vector.

dvec3
A three-component double-precision floating-point vector.

dvec4
A four-component double-precision floating-point vector.

bvec2
A two-component Boolean vector.

bvec3
A three-component Boolean vector.

bvec4
A four-component Boolean vector.

ivec2
A two-component signed integer vector.

vec3
A three-component signed integer vector.

ivec4
A four-component signed integer vector.

uvec2
A two-component unsigned integer vector.

uvec3
A three-component unsigned integer vector.

uvec4
A four-component unsigned integer vector.

mat2
A 2×2 single-precision floating-point matrix.

mat3
A 3×3 single-precision floating-point matrix.

mat4
A 4×4 single-precision floating-point matrix.

mat2x2
Same as a mat2.

mat2x3
A single-precision floating-point matrix with 2 columns and 3 rows.

mat2x4
A single-precision floating-point matrix with 2 columns and 4 rows.

mat3x2
A single-precision floating-point matrix with 3 columns and 2 rows.

mat3x3
Same as a mat3.

mat3x4
A single-precision floating-point matrix with 3 columns and 4 rows.

mat4x2
A single-precision floating-point matrix with 4 columns and 2 rows.

mat4x3
A single-precision floating-point matrix with 4 columns and 3 rows.

mat4x4
Same as a mat4.

dmat2
A 2×2 double-precision floating-point matrix.

dmat3
A 3×3 double-precision floating-point matrix.

dmat4
A 4×4 double-precision floating-point matrix.

dmat2x2
Same as a dmat2.

dmat2x3
A double-precision floating-point matrix with 2 columns and 3 rows.

dmat2x4
A double-precision floating-point matrix with 2 columns and 4 rows.

dmat3x2
A double-precision floating-point matrix with 3 columns and 2 rows.

dmat3x3
Same as a dmat3.

dmat3x4
A double-precision floating-point matrix with 3 columns and 4 rows.

dmat4x2
A double-precision floating-point matrix with 4 columns and 2 rows.

dmat4x3
A double-precision floating-point matrix with 4 columns and 3 rows.

dmat4x4
Same as a dmat4.

sampler1D,image1D
A handle for accessing a 1D texture.

sampler2D,image2D
A handle for accessing a 2D texture.

sampler3D,image3D
A handle for accessing a 3D texture.

samplerCube,imageCube
A handle for accessing a cube mapped texture.

sampler2DRect
image2DRect
A handle for accessing a rectangle texture.

sampler1DArray,image1DArray
A handle for accessing a 1D array texture.

sampler2DArray,image2DArray
A handle for accessing a 2D array texture.

samplerBuffer,imageBuffer
A handle for accessing a buffer texture.

sampler2DMS,image2DMS
A handle for accessing a 2D multi-sample texture.

sampler2DMSArray,image2DMSArray
A handle for accessing a 2D multi-sample array texture.

samplerCubeArray,imageCubeArray
A handle for accessing a cube map array texture.

sampler1DShadow
A handle for accessing a 1D depth texture with comparison.

sampler2DShadow
A handle for accessing a 2D depth texture with comparison.

sampler2DRectShadow
A handle for accessing a rectangle texture with comparison.

sampler1DArrayShadow
A handle for accessing a 1D array depth texture with comparison.

sampler2DArrayShadow
A handle for accessing a 2D array depth texture with comparison.

samplerCubeShadow
A handle for accessing a cube map depth texture with comparison.

samplerCubeArrayShadow
A handle for accessing a cube map array depth texture with comparison.

isampler1D,iimage1D
A handle for accessing an integer 1D texture.

isampler2D,iimage2D
A handle for accessing an integer 2D texture.

isampler3D,iimage3D
A handle for accessing an integer 3D texture.

isamplerCube,iimageCube
A handle for accessing an integer cube mapped texture.

isampler2DRect,iimage2DRect
A handle for accessing an integer 2D rectangle texture.

isampler1DArray,iimage1DArray
A handle for accessing an integer 1D array texture.

isampler2DArray,iimage2DArray
A handle for accessing an integer 2D array texture.

isamplerBuffer,iimageBuffer
A handle for accessing an integer buffer texture.

isampler2DMS,iimage2DMS
A handle for accessing an integer 2D multi-sample texture.

isampler2DMSArray,iimage2DMSArray
A handle for accessing an integer 2D multi-sample array texture.

isamplerCubeArray,iimageCubeArray
A handle for accessing an integer cube map array texture.

atomic_uint
A handle for accessing an unsigned integer atomic counter.

usampler1D,uimage1D
A handle for accessing an unsigned integer 1D texture.

usampler2D,uimage2D
A handle for accessing an unsigned integer 2D texture.

usampler3D,uimage3D
A handle for accessing an unsigned integer 3D texture.

usamplerCube,uimageCube
A handle for accessing an unsigned integer cube mapped texture.

usampler2DRect,uimage2DRect
A handle for accessing an unsigned integer rectangle texture.

usampler1DArray,uimage1DArray
A handle for accessing an unsigned integer 1D array texture.

usampler2DArray,uimage2DArray
A handle for accessing an unsigned integer 2D array texture.

usamplerBuffer,uimageBuffer
A handle for accessing an unsigned integer buffer texture.

usampler2DMS,uimage2DMS
A handle for accessing an unsigned integer 2D multi-sample texture.

usampler2DMSArray,uimage2DMSArray
A handle for accessing an unsigned integer 2D multi-sample texture array.

usamplerCubeArray,uimageCubeArray
A handle for accessing an unsigned integer cube map array texture.